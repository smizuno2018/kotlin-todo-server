buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.todo'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    compile "org.jetbrains.exposed:exposed-core:$exposed_version"
    compile "org.jetbrains.exposed:exposed-dao:$exposed_version"
    compile "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    compile "org.postgresql:postgresql:$postgresql_version"
    compile "org.jetbrains.exposed:exposed-jodatime:$exposed_version"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testCompile group: "org.assertj", name: "assertj-core", version: "$assertj_core_version"
    testCompile group: "io.rest-assured", name: "rest-assured", version: "$rest_assured_version"
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-api", version: "$junit_jupiter_api_version"
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "$junit_jupiter_engine_version"
}

test {
    useJUnitPlatform()
}
